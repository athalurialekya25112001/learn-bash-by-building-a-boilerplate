builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "$VSCODE_ENV_REPLACE" ]
[ -n "$VSCODE_ENV_PREPEND" ]
[ -n "$VSCODE_ENV_APPEND" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=$PROMPT_COMMAND
echo hello terminal
pwd
ls --color=auto
cd freeCodeCamp
pwd
ls --color=auto
cd test
pwd
ls --color=auto
cd ..
ls --color=auto
more package-lock.json
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "$VSCODE_ENV_REPLACE" ]
[ -n "$VSCODE_ENV_PREPEND" ]
[ -n "$VSCODE_ENV_APPEND" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=$PROMPT_COMMAND
cd freeCodeCamp
ls --color=auto
more package.json
clear
ls --color=auto
cd node_modules
ls --color=auto
ls --color=auto -l
cd has
__vsc_prompt_cmd_original
ls --color=auto
more README.md
ls --color=auto
__vsc_prompt_cmd_original
more LICENSE-MIT
clear
__vsc_prompt_cmd_original
ls --color=auto
cd src
pwd
ls --color=auto
more index.js
cd ..
ls --color=auto
cd ..
cd ../..
ls --color=auto
clear
mkdir website
ls --color=auto
cd website
ls --color=auto
echo
echo hello website
cd
cd project
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "$VSCODE_ENV_REPLACE" ]
[ -n "$VSCODE_ENV_PREPEND" ]
[ -n "$VSCODE_ENV_APPEND" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=$PROMPT_COMMAND
cd website
ls --color=auto
touch index.html
touch style.css
ls --color=auto
touch styles.css
ls --color=auto
touch index.js
touch .gitignore
ls --color=auto
--help
ls --color=auto --help
ls --color=auto --all
cd ..
cd .
cd website
cd .
touch background.jpg
touch header.png
touch footer.jpeg
ls --color=auto
touch roboto.font
touch lato.font
touch melno.font
touch menlo.font
ls --color=auto
touch CodeAlly.svg
touch CodeRoad.svg
touch freeCodeCamp.svg
ls --color=auto
mkdir images
ls --color=auto
cp background.jpg images
cd images
ls --color=auto
cd ..
ls --color=auto
rm background.jpg
ls --color=auto
rm style.css
ls --color=auto
cp header.jpg images
cp header.png images
__vsc_prompt_cmd_original
cp footer.jpeg images
cd images
ls --color=auto
cd ..
ls --color=auto
rm header.png
__vsc_prompt_cmd_original
rm footer.jpeg
ls --color=auto
mv roboto.font roboto.woff
ls --color=auto
mv lato.font lato.ttf
rm melno.font
mv menlo.font menlo.otf
ls --color=auto
mkdir fonts
ls --color=auto
mv roboto.woff fonts
find
mv lato.ttf fonts
find
mv menlo.otf fonts
find
mkdir client
ls --color=auto
mkdir clinet/src
mkdir client/src
mv index.html client/src
find
mv index.js client/src
mv styles.css client/src
find
find client
find --hekp
find --help
find -name index.html
find -name styles.cs
find -name styles.css
find flag src
find src
flag src
find . -type d -name "src"
find -name src
find
cd client
touch assets
ls --color=auto
rm assets
ls --color=auto
mkdir assets
ls --color=auto
cd assets
mv images assets/images
ls --color=auto
mkdir images
cd images
touch background.jpg
cd ..//..
cd ..//..
cd website
ls --color=auto
cd client
cd src
cd assets
ls --color=auto
cd ..
ls --color=auto
cd assets
cd images
ls --color=auto
cd ../../..
cd images
ls --color=auto
mv background.jpg ..
ls --color=auto
mv header.png
mv header.png ..
ls --color=auto
cd ..
ls --color=auto
find -name images
mv header.png client/assets/images
find -name header.png
find -name footer.png
find -name footer.jpeg
mv images/footer.jpeg client/assets/images
find -name images
find
rmdir images
ls --color=auto
find
rm images/background.jpg
ls --color=auto
mkdir images
touch images/background.jpg
fing
find
rm images/background.jpg
rmdir images
ls --color=auto
find
mkdir client/assets/icons
mv CodeAlly.svg client/assets/icons
find
mv CodeRoad.svg client/assets/icons
mv freeCodeCamp.svg client/assets/icons
find
mkdir client/assets/fonts
find
touch client/assets/fonts/roboto-bold.woff
touch client/assets/fonts/roboto-light.woff
find client/assets/fonts
touch client/assets/fonts/lato-bold.ttf
touch client/assets/fonts/lato-light.ttf
find
